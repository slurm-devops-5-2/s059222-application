apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: {{ .Chart.Name }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
    component: {{ .Values.application.name }}
  name: {{ .Values.application.name }}
spec:
  replicas: {{ .Values.application.replicas }}
  selector:
    matchLabels:
      app: {{ .Chart.Name }}
      release: {{ .Release.Name }}
      component: {{ .Values.application.name }}
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: {{ .Chart.Name }}
        release: {{ .Release.Name }}
        component: {{ .Values.application.name }}
    spec:
      containers:
      - name: {{ .Values.application.name }}
        image: {{ .Values.application.image }}:{{ .Values.application.imageTag }}
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: {{ .Values.application.service.app_port }}
        readinessProbe:
          initialDelaySeconds: 10
          failureThreshold: 10
          httpGet:
            path: /
            port: {{ .Values.application.service.app_port }}
            scheme: HTTP
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        livenessProbe:
          initialDelaySeconds: 10
          failureThreshold: 3
          httpGet:
            path: /
            port: {{ .Values.application.service.app_port }}
            scheme: HTTP
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 2
        resources:
{{ toYaml .Values.application.resources | indent 12 }}
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      terminationGracePeriodSeconds: 20
      imagePullSecrets:
        - name: {{ .Values.application.imagePullSecret }}
